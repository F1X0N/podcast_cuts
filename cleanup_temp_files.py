#!/usr/bin/env python3
"""
Script para limpar arquivos tempor√°rios que podem estar causando problemas
"""
import os
import tempfile
import glob
import time

def cleanup_temp_files():
    """
    Limpa arquivos tempor√°rios que podem estar causando problemas de permiss√£o
    """
    print("üßπ Iniciando limpeza de arquivos tempor√°rios...")
    
    # Lista de padr√µes de arquivos tempor√°rios
    temp_patterns = [
        os.path.join(tempfile.gettempdir(), "*.wav"),
        os.path.join(tempfile.gettempdir(), "*.mp4"),
        os.path.join(tempfile.gettempdir(), "*.avi"),
        os.path.join(tempfile.gettempdir(), "*.mov"),
        os.path.join(tempfile.gettempdir(), "tmp*"),
        os.path.join(tempfile.gettempdir(), "temp*"),
    ]
    
    cleaned_count = 0
    
    for pattern in temp_patterns:
        try:
            files = glob.glob(pattern)
            for file_path in files:
                try:
                    # Tenta remover o arquivo
                    if os.path.exists(file_path):
                        os.unlink(file_path)
                        cleaned_count += 1
                        print(f"   ‚úÖ Removido: {os.path.basename(file_path)}")
                except PermissionError:
                    print(f"   ‚ö†Ô∏è N√£o foi poss√≠vel remover (em uso): {os.path.basename(file_path)}")
                except Exception as e:
                    print(f"   ‚ùå Erro ao remover {os.path.basename(file_path)}: {e}")
        except Exception as e:
            print(f"   ‚ùå Erro ao processar padr√£o {pattern}: {e}")
    
    print(f"\nüéâ Limpeza conclu√≠da! {cleaned_count} arquivos removidos.")
    
    # For√ßa coleta de lixo
    import gc
    gc.collect()
    
    print("‚ôªÔ∏è Mem√≥ria liberada.")

def force_close_moviepy_clips():
    """
    For√ßa o fechamento de clips do MoviePy que possam estar em mem√≥ria
    """
    print("üé¨ For√ßando fechamento de clips do MoviePy...")
    
    try:
        import moviepy.editor as mp
        
        # For√ßa limpeza de recursos do MoviePy
        mp.VideoFileClip.close_all_clips()
        print("   ‚úÖ Clips do MoviePy fechados")
    except Exception as e:
        print(f"   ‚ö†Ô∏è Erro ao fechar clips: {e}")

if __name__ == "__main__":
    print("üîß Utilit√°rio de Limpeza de Arquivos Tempor√°rios")
    print("=" * 50)
    
    # For√ßa fechamento de clips
    force_close_moviepy_clips()
    
    # Aguarda um pouco para garantir que os recursos sejam liberados
    print("‚è≥ Aguardando libera√ß√£o de recursos...")
    time.sleep(2)
    
    # Limpa arquivos tempor√°rios
    cleanup_temp_files()
    
    print("\n‚ú® Sistema limpo e pronto para uso!") 